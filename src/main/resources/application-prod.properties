server.port=443
server.context-path=/

#logback配置
logging.config=classpath:logback.xml

#mybatis配置
mybatis.config-location=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mappers/*.xml
mybatis.type-aliases-package=com.smt.pc.Interface.domain

#数据库设置
datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/piao360pc?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=APIqwVwjJ2fs-xi


#spring.datasource.url=jdbc:mysql://47.104.24.69:3306/piao360pc?useUnicode=true&characterEncoding=utf-8
#spring.datasource.username=smtadm
#spring.datasource.password=smtadm123!
#

#--------------------------
#  lhspvisiiiaebifh
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true



endpoints.health.sensitive=false
management.security.enabled=false

#slave数据源
#slave.datasource.type=com.alibaba.druid.pool.DruidDataSource
slave.datasource.driverClassName=com.mysql.jdbc.Driver
#slave.datasource.url=jdbc:mysql://192.168.50.231:3306/piao360pc?useUnicode=true&characterEncoding=utf-8
#slave.datasource.username=lijikai
#slave.datasource.password=lijikaiV5!
#47.104.24.69  v 192.168.50.139   smtadm  smtadm  root  ljk123!
slave.datasource.url=jdbc:mysql://127.0.0.1:3306/piao360pc?useUnicode=true&characterEncoding=utf-8
slave.datasource.username=root
slave.datasource.password=APIqwVwjJ2fs-xi

slave.datasource.initialSize=5
slave.datasource.minIdle=5
slave.datasource.maxActive=20
# 配置获取连接等待超时的时间
slave.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
slave.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
slave.datasource.minEvictableIdleTimeMillis=300000
slave.datasource.validationQuery=SELECT 1 FROM DUAL
slave.datasource.testWhileIdle=true
slave.datasource.testOnBorrow=false
slave.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
slave.datasource.poolPreparedStatements=true
slave.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
slave.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
slave.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
slave.datasource.useGlobalDataSourceStat=true

########################################################
###mail setting
########################################################
# 设置邮箱主机
spring.mail.host=smtp.mxhichina.com
# 设置用户名
spring.mail.username=ops@piao360.net
# 设置密码
spring.mail.password=AAAaaa111
# 设置是否需要认证，如果为true,那么用户名和密码就必须的，
#如果设置false，可以不设置用户名和密码，当然也得看你的对接的平台是否支持无密码进行访问的。
spring.mail.properties.mail.smtp.auth=true
# STARTTLS[1]  是对纯文本通信协议的扩展。它提供一种方式将纯文本连接升级为加密连接（TLS或SSL），而不是另外使用一个端口作加密通信。
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.ssl.required=true

spring.mail.port=465





#########spring redis配置
# Redis数据库索引（默认为0）
#spring.redis.database=0
# Redis服务器地址
spring.redis.host=47.104.24.69
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=lijikaiV5!
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000

###########kafka配置###########
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=192.168.88.177:9092
# 指定默认消费者group id
spring.kafka.consumer.group-id=jonGroup
# 指定默认topic id
spring.kafka.template.default-topic= jon-replicated-topic
# 指定listener 容器中的线程数，用于提高并发量
spring.kafka.listener.concurrency= 3
# 每次批量发送消息的数量
spring.kafka.producer.batch-size= 1000

##################服务器IP地址及端口号port(文件上传配置)############
upload.IP=sit.piao360.net
upload.port=8099
upload.img=/home/upload/img
upload.file=/home/upload/file

##################阿里云文件上传配置(文件上传配置)############
OSS.Endpoint=oss-cn-beijing.aliyuncs.com
OSS.AccessKey=LTAILZFwytKBNvJ6
OSS.AccessKeySecret=c6TV6MlN9DyAdB4n7dkSLtWJI926rf
OSS.BucketName=smtimg
OSS.accessUrl=
##################Mybatis的配置############
#mybatis.configuration.map-underscore-to-camel-case=true




##################es配置############
##开启 Elasticsearch 仓库
#spring.data.elasticsearch.repositories.enabled=false
##Elasticsearch 集群名elasticsearch
##spring.data.elasticsearch.cluster-name=cluster01
#spring.data.elasticsearch.cluster-name=cluster01
##集群节点地址列表，用逗号分隔。如果没有指定，就启动一个客户端节点
#spring.data.elasticsearch.cluster-nodes=192.168.88.176:9300
##elasticsearch.cluster-name=cluster01
##elasticsearch.host=192.168.88.176
##elasticsearch.port=9300



spring.application.name=@project.description@
spring.boot.admin.url=http://monitor.piao360.net:8093

#邮件接收人
email.receive=ljk@ssmig.com;ljk_leroy@163.com


#spring.thymeleaf.cache=false
#spring.thymeleaf.check-template-location=true
#spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=LEGACYHTML5
#

# 修改默认的静态寻址资源目录
spring.resources.static-locations = classpath:/templates/,classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
#spring.thymeleaf.prefix=classpath:/templates
